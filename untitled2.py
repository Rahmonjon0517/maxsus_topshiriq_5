# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kOGyklln1ZrCJ4qRPDgBDEngPqMNdsW9
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

import warnings
warnings.simplefilter('ignore')

# Load the dataset
df = pd.read_csv("/kaggle/input/indian-bird-observations-tracking-species/Birds of India.csv")
df.head()

# Inspect the dataset structure
df.info()

# Clean 'total observations' and convert it to int
df['total observations'] = df['total observations'].str.replace(',', '').astype(int)

# Clean 'last observation' and convert it to datetime
df['last observation'] = pd.to_datetime(df['last observation'], errors='coerce')  # Coerce errors to NaT

# Extract month, day, and year from 'last observation' after conversion to datetime
df[['month', 'date', 'year']] = df['last observation'].apply(lambda x: pd.Series([x.strftime('%B') if pd.notnull(x) else None,
                                                                                 x.day if pd.notnull(x) else None,
                                                                                 x.year if pd.notnull(x) else None]))

# Check the data types again
df.info()

# Plotting the distribution of total observations
plt.figure(figsize=(10, 6))
sns.histplot(df['total observations'], bins=5, kde=True, color='skyblue')
plt.title("Distribution of Total Observations", fontsize=16)
plt.xlabel("Total Observations", fontsize=12)
plt.ylabel("Frequency", fontsize=12)
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.show()

# Top 10 birds by total observations
top_birds = df.groupby('name')['total observations'].sum().nlargest(10).reset_index()

plt.figure(figsize=(12, 7))
sns.barplot(data=top_birds, x='total observations', y='name', palette='viridis')
plt.title("Top 10 Bird Species by Total Observations", fontsize=16)
plt.xlabel("Total Observations", fontsize=12)
plt.ylabel("Bird Species", fontsize=12)
plt.grid(axis='x', linestyle='--', alpha=0.7)
plt.show()

# Total observations by year
yearly_observations = df.groupby('year')['total observations'].sum().reset_index()

plt.figure(figsize=(10, 6))
sns.lineplot(data=yearly_observations, x='year', y='total observations', marker='o', color='teal')
plt.title("Total Observations by Year", fontsize=16)
plt.xlabel("Year", fontsize=12)
plt.ylabel("Total Observations", fontsize=12)
plt.grid(True, linestyle='--', alpha=0.7)
plt.show()

# Total observations by month
monthly_observations = df.groupby('month')['total observations'].sum().reset_index()
monthly_observations['month'] = pd.Categorical(monthly_observations['month'], categories=[
    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'], ordered=True)
monthly_observations = monthly_observations.sort_values('month')

plt.figure(figsize=(10, 6))
sns.barplot(data=monthly_observations, x='month', y='total observations', palette='coolwarm')
plt.title("Total Observations by Month", fontsize=16)
plt.xlabel("Month", fontsize=12)
plt.ylabel("Total Observations", fontsize=12)
plt.xticks(rotation=45)
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.show()

# Create a 'type' column based on the bird name (last word in the name)
df['type'] = df['name'].apply(lambda x: x.split()[-1])

# Drop rows with missing data in any of the columns
df = df.dropna()

# Function to get top observation by bird type
def get_top_observation_by_type(df, bird_type):
    df_type = df[df['type'] == bird_type]
    most_observations = df_type.loc[df_type['total observations'].idxmax()]
    most_recent_observation = df_type.loc[df_type['last observation'].idxmax()]
    return most_observations[['name', 'total observations']], most_recent_observation[['name', 'last observation']]

# Get unique bird types
bird_types = df['type'].unique()

# Collect insights for each bird type
insights = []
for bird_type in bird_types:
    most_observations, most_recent_observation = get_top_observation_by_type(df, bird_type)
    insights.append({
        'Bird Type': bird_type,
        'Most Observations': most_observations['name'],
        'Total Observations': most_observations['total observations'],
        'Last Observation Date': most_recent_observation['last observation']
    })

# Create a DataFrame for the insights
insights_df = pd.DataFrame(insights)

# Show insights DataFrame
insights_df